docker.monitor.start = sudo /usr/bin/docker events --format "{{json .}}"

docker.compose.up = docker-compose %s up -d
docker.compose.down = docker-compose %s down -v
docker.compose.ps = docker-compose %s ps -q
docker.inspect.health.status = sudo /usr/bin/docker inspect %s --format="{{ .State.Health.Status }} {{ .Name }}"
docker.inspect.default.network = sudo /usr/bin/docker inspect %s --format "{{range \\$n,\\$conf := .NetworkSettings.Networks}}{{\\$n}} {{end}}"
docker.inspect.image.digest = sudo /usr/bin/docker inspect --format="{{.Id}}" %s
docker.inspect.image.os = sudo /usr/bin/docker inspect --format="{{.Os}}" %s
docker.logs = sudo /usr/bin/docker logs %s

docker.urgent.cleanup = sudo /usr/bin/docker system prune -f --volumes
docker.urgent.cleanup.fallback = sudo /usr/bin/docker system prune -f

docker.registry.login = sudo /usr/bin/docker login -u "%s" --password-stdin %s
docker.registry.login.legacy = sudo /usr/bin/docker login -u "%s" -p "%s" %s
docker.registry.logout = sudo /usr/bin/docker logout %s
docker.registry.list = sudo /usr/bin/docker info --format "{{json .RegistryConfig.IndexConfigs}}"

docker.push = sudo /usr/bin/docker push %s %s
docker.rmi = sudo /usr/bin/docker rmi %s

docker.run.pull = sudo /usr/bin/docker pull %s
docker.run.start = sudo /usr/bin/docker run --rm -w "%s" --label jetbrains.teamcity.buildId=%d
docker.run.ps = sudo /usr/bin/docker ps -q --filter label=jetbrains.teamcity.buildId=%s
docker.run.stop = sudo /usr/bin/docker stop -t 3 %s
docker.run.chown = sudo /usr/bin/docker run -u 0:0 --rm --entrypoint chown %s -R %d:%d "%s"
docker.run.chmod_tmp = chmod %d

docker.images.find = sudo /usr/bin/docker images -q "%s"